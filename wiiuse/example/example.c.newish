#include <stdio.h>
#include <stdlib.h>

#ifndef WIN32
	#include <unistd.h>
#endif

#include "wiiuse.h"

#define MAX_WIIMOTES 1

void handle_event(struct wiimote_t* wm) {
	if (IS_PRESSED(wm, WIIMOTE_BUTTON_A))           printf("A pressed\n");
        if (IS_PRESSED(wm, WIIMOTE_BUTTON_B))           printf("B pressed\n");
        if (IS_PRESSED(wm, WIIMOTE_BUTTON_UP))          printf("UP pressed\n");
        if (IS_PRESSED(wm, WIIMOTE_BUTTON_DOWN))        printf("DOWN pressed\n");
        if (IS_PRESSED(wm, WIIMOTE_BUTTON_LEFT))        printf("LEFT pressed\n");
        if (IS_PRESSED(wm, WIIMOTE_BUTTON_RIGHT))       printf("RIGHT pressed\n");
        if (IS_PRESSED(wm, WIIMOTE_BUTTON_MINUS))       printf("MINUS pressed\n");
        if (IS_PRESSED(wm, WIIMOTE_BUTTON_PLUS))        printf("PLUS pressed\n");
        if (IS_PRESSED(wm, WIIMOTE_BUTTON_ONE))         printf("ONE pressed\n");
        if (IS_PRESSED(wm, WIIMOTE_BUTTON_TWO))         printf("TWO pressed\n");
        if (IS_PRESSED(wm, WIIMOTE_BUTTON_HOME))        printf("HOME pressed\n");

	if (IS_JUST_PRESSED(wm, WIIMOTE_BUTTON_MINUS))
		wiiuse_set_ir(wm, 0);

	if(IS_JUST_PRESSED(wm, WIIMOTE_BUTTON_PLUS))
		wiiuse_set_ir(wm, 1);

	if (WIIUSE_USING_IR(wm)) {
		int i = 0;

//		for(; i<4; ++i) {
//			if (wm->ir.dot[i].visible)
//				printf("IR source %i: (%u, %u)\n", i, wm->ir.dot[i].x, wm->ir.dot[i].y);
//		}
		
//		printf("IR cursor: (%u, %u)\n", wm->ir.x, wm->ir.y);
		printf("\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\bIR z distance: %f",wm->ir.z);
	}
}

int main(int argc, char** argv) {
	wiimote** wiimotes;
	int found, connected;

	printf ("JAQD - Head Tracker\n");
	printf ("Version 0.0.3\n");

	wiimotes = wiiuse_init(MAX_WIIMOTES);

	found = wiiuse_find(wiimotes, MAX_WIIMOTES, 5);
	if (!found) {
		printf ("No wiimotes found.\n");
		return 0;
	}

	connected = wiiuse_connect(wiimotes, MAX_WIIMOTES);
	if(connected)
		printf("Connected to wiimote\n");
	else{
		printf("Failed to connect\n");
		return 0;
	}

	wiiuse_set_leds(wiimotes[0], WIIMOTE_LED_1 | WIIMOTE_LED_4);
	wiiuse_rumble(wiimotes[0], 1);
	#ifndef WIN32
                usleep(200000);
        #else
                Sleep(200);
        #endif
	wiiuse_rumble(wiimotes[0], 0);

	while(1) {
		if (wiiuse_poll(wiimotes, MAX_WIIMOTES)) {
			int i = 0;
			for(; i < MAX_WIIMOTES; ++i){
				switch(wiimotes[i]->event){
					case WIIUSE_EVENT:
						handle_event(wiimotes[i]);
						break;
					case WIIUSE_READ_DATA:
						break;
				}
			}
		}
	}

	wiiuse_cleanup(wiimotes, MAX_WIIMOTES);

	return 0;
}
